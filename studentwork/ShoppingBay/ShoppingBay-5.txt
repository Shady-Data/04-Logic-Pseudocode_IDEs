requirements
 - uses ID#, itemDesc, auctionLength (in days), minReqBid
 - A program that prompts the user for a maximum required bid, and then continuously accepts auction data and displays data for every auction in which the minimum bid is less than or equal to the amount entered by the user.


Module main
	Declarations
		real maxReqBid // Maximum required bid for display filter
		num itemID, // ID number of the Auction
		String itemDesc, // Description of the item
		num auctionLength, // length of auction in days
		real minReqBid, // Minimum Required Bid for Auction
		tuple itemData // tuple containing itemID, itemDesc, auctionLength, minReqBid
		list allItems // list containing itemData tuples
		Global Boolean eof = True // sentinel value flag for do-while loop operation
	getMaximumReqBid()
	Do
		getAuctionDetails()
	While
	
	For item in allItems
		If minReqBid <= maxReqBid Then
			Display "ID: ",itemID, "\nDescription: ", itemDesc, "\nAuction Length: ", auctionLength, "\nMinimum Required Bid: ", minReqBid
		End If
stop
		
Module getMaximumReqBid
	Display "Enter your maximum bid amount: "
	Input maxReqBid
return

Module getAuctionDetails
	itemData = () // ensure itemData is empty for the run
	Display "Enter ID#: "
	Input itemID
	If itemID == Null or itemID == 0 Then
		eof = False
		return
	Else
		Display "Enter Item Description: "
		Input itemDesc
		Display "Enter Auction Length, in days: "
		Input auctionLength
		Display "Enter the Minimum Required Bid: $"
		Input minReqBid
		itemData = (itemID, itemDesc, auctionLength, minReqBid)
		allItems.insert(itemData)
	End If
return